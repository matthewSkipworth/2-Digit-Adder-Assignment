module BCD_Add(A, B, Cin, S0, S1);
	input [3:0] A, B; 
	input Cin;
	output [3:0] S0, S1;
//	logic Cout, Sum;
	logic Cout, Sum;
	logic [7:0] V;
	
	Four_Bit_Ripple_Carry_Adder A1(A, B, Cin, Cout, Sum);
	
	assign V[4] = Cout;
	assign V[3:0] = Sum;
		reg [3:0] hundreds, tens, ones;
	
	always @(V) begin
		if(V > 9) begin
			tens = 4'd1;
			ones = V - 4'd10;
		end else begin
			tens = 4'd0;
			ones = V;	
		end
	end
	
	assign S1[3:1] = 0;
	assign S1[0] = tens;
	assign S0 = ones;

	
	//Bin_to_BCD B1_5_bit(E, F, Ci, Sum);
	/*
	T = Sum + Cout 
	always begin
		if (T > 9) begin
			Z = 10;
			C = 1;
			
		end else begin
			Z = 0;
			C = 0;
		end
	end
	S0 = T - Z;
	*/
	
endmodule	